# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: tests
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  schedule:
  - cron:  '0 2 * * *'

# Declare default permissions as read only.
permissions: read-all

jobs:
  integration:
    runs-on: [self-hosted, linux, x64]
    # run integration tests on all builds except pull requests from forks or
    # dependabot
    if: |
      github.event_name != 'pull_request' ||
      (github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]')
    name: "integration tests (linux)"
    permissions:
      contents: 'read'
      id-token: 'write'
      issues: write
      pull-requests: write
    steps:
      # This helps understand how much disk space the cache and custom runner
      # is actually using.
      # Related to https://github.com/actions/runner/issues/2708
      - name: Report disk usage
        run: df -h

      - name: Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: "1.24"
          cache: false

      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - id: 'auth'
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@7c6bc770dae815cd3e89ee6cdf493a5fab2cc093 # v3.0.0
        with:
          workload_identity_provider: ${{ vars.PROVIDER_NAME }}
          service_account: ${{ vars.SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@aa5489c8933f4cc7a4f7d45035b3b1440c9c10db # v3.0.1

      - name: Get Secrets
        id: 'secrets'
        uses: google-github-actions/get-secretmanager-secrets@bc9c54b29fdffb8a47776820a7d26e77b379d262 # v3.0.0
        with:
          secrets: |-
            ALLOYDB_INSTANCE_NAME:${{ vars.GOOGLE_CLOUD_PROJECT }}/ALLOYDB_INSTANCE_NAME
            ALLOYDB_CLUSTER_PASS:${{ vars.GOOGLE_CLOUD_PROJECT }}/ALLOYDB_CLUSTER_PASS
            ALLOYDB_INSTANCE_IP:${{ vars.GOOGLE_CLOUD_PROJECT }}/ALLOYDB_INSTANCE_IP
            ALLOYDB_IAM_USER:${{ vars.GOOGLE_CLOUD_PROJECT }}/ALLOYDB_GO_IAM_USER
            ALLOYDB_PSC_INSTANCE_URI:${{ vars.GOOGLE_CLOUD_PROJECT }}/ALLOYDB_PSC_INSTANCE_URI

      - name: Run tests
        env:
          ALLOYDB_DB: 'postgres'
          ALLOYDB_USER: 'postgres'
          ALLOYDB_IAM_USER: '${{ steps.secrets.outputs.ALLOYDB_IAM_USER }}'
          ALLOYDB_PASS: '${{ steps.secrets.outputs.ALLOYDB_CLUSTER_PASS }}'
          ALLOYDB_INSTANCE_NAME: '${{ steps.secrets.outputs.ALLOYDB_INSTANCE_NAME }}'
          ALLOYDB_INSTANCE_IP: '${{ steps.secrets.outputs.ALLOYDB_INSTANCE_IP }}'
          ALLOYDB_PSC_INSTANCE_URI: '${{ steps.secrets.outputs.ALLOYDB_PSC_INSTANCE_URI }}'
        # specifying bash shell ensures a failure in a piped process isn't lost by using `set -eo pipefail`
        shell: bash
        run: |
          go test -v -race -cover ./... | tee test_results.txt

      - name: Convert test output to XML
        if: ${{ (github.event_name == 'schedule' || github.event_name == 'push') && always() }}
        run: |
          go install github.com/jstemmer/go-junit-report/v2@latest
          go-junit-report -in test_results.txt -set-exit-code -out integration_sponge_log.xml

      - name: FlakyBot
        # only run flakybot on periodic (schedule) and continuous (push) events
        if: ${{ (github.event_name == 'schedule' || github.event_name == 'push') && always() }}
        run: |
          curl https://github.com/googleapis/repo-automation-bots/releases/download/flakybot-1.1.0/flakybot -o flakybot -s -L
          chmod +x ./flakybot
          ./flakybot --repo ${{github.repository}} --commit_hash ${{github.sha}} --build_url https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}

  unit:
    name: "unit tests"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        goarch: ["", "386"]
        go-version: ["1.23", "1.24"]
        exclude:
          - os: macos-latest
            goarch: "386"
          - os: windows-latest
            goarch: "386"
          - os: ubuntu-latest
            goarch: "386"
            go-version: "1.23"
      fail-fast: false
    permissions:
      contents: 'read'
      id-token: 'write'
      issues: write
      pull-requests: write
    env:
      GOARCH: ${{ matrix.goarch }}
    steps:
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: ${{ matrix.go-version }}
          cache: false

      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Run tests
        if: matrix.goarch == ''
        run: |
          go test -v -race -cover -short ./...
      - name: Run tests (386)
        # 386 archs don't support race detector
        if: matrix.goarch == '386'
        run: |
          go test -v -cover -short ./...
